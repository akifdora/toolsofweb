<?php include "../header.php" ?>

    <h1>Vulnerability Scanner</h1>
    <form method="post">
        <input type="text" name="url" placeholder="Web Sitesi URL'si">
        <input type="submit" value="Tara">
    </form>

<?php
if ($_SERVER["REQUEST_METHOD"] === "POST" && isset($_POST["url"])) {
    $url = $_POST["url"];

    // Protokol ekle (http:// veya https://)
    if (!preg_match("/^https?:\/\//", $url)) {
        $url = "http://" . $url;
    }

    // HTML tablo başlangıcı
    echo '<div style="margin-top: 20px; font-size: 18px;">';
    echo "<h2>Tarama Sonuçları</h2>";
    echo "<table border='1' cellpadding='10' cellspacing='0''>";
    echo "<tr><th>Test</th><th>Sonuç</th></tr>";

    // SQL Injection Test
    $sqlInjectionTest = $url . "?id=1' OR '1'='1";
    $sqlResponse = @file_get_contents($sqlInjectionTest);
    echo "<tr><td>SQL Injection Açığı</td><td>" . ($sqlResponse !== false && strpos($sqlResponse, 'error') !== false ? "<strong>Bulundu ❌</strong>" : "<strong>Bulunamadı ✅</strong>") . "</td></tr>";

    // XSS Test
    $xssTest = $url . "?search=<script>alert('XSS')</script>";
    $xssResponse = @file_get_contents($xssTest);
    echo "<tr><td>XSS Açığı</td><td>" . ($xssResponse !== false && strpos($xssResponse, '<script>alert') !== false ? "<strong>Bulundu ❌</strong>" : "<strong>Bulunamadı ✅</strong>") . "</td></tr>";

    // Directory Traversal Test
    $dirTraversalTest = $url . "/../../../../etc/passwd";
    $dirResponse = @file_get_contents($dirTraversalTest);
    echo "<tr><td>Directory Traversal Açığı</td><td>" . ($dirResponse !== false && strpos($dirResponse, 'root:x:0:0') !== false ? "<strong>Bulundu ❌</strong>" : "<strong>Bulunamadı ✅</strong>") . "</td></tr>";


    // HTTPS Güvenliği Testi
    $httpsTestUrl = str_replace("http://", "https://", $url);
    $httpsHeaders = @get_headers($httpsTestUrl);
    echo "<tr><td>HTTPS Güvenliği</td><td>" . ($httpsHeaders && strpos($httpsHeaders[0], '200') !== false ? "<strong>Aktif ✅</strong>" : "<strong>Aktif Değil ❌</strong>") . "</td></tr>";

    // Security Headers Testi
    $securityHeadersTest = @get_headers($url, 1);
    $securityHeaders = ['Content-Security-Policy', 'X-Content-Type-Options', 'X-Frame-Options', 'Strict-Transport-Security'];
    foreach ($securityHeaders as $header) {
        $headerValue = isset($securityHeadersTest[$header]) ? $securityHeadersTest[$header] : 'Eksik ⚠️';
        echo "<tr><td>$header</td><td><strong>$headerValue</strong></td></tr>";
    }

    // Clickjacking Test
    $clickjackingTest = '<iframe src="' . htmlspecialchars($url) . '" style="width:100%; height:100%; border:none;"></iframe>';
    $clickjackingResponse = @file_get_contents('data:text/html,' . urlencode($clickjackingTest));
    echo "<tr><td>Clickjacking</td><td>" . ($clickjackingResponse !== false ? "<strong>Bulunamadı ✅</strong>" : "<strong>Bulundu ❌</strong>") . "</td></tr>";

    // Content Security Policy (CSP) Testi
    $cspHeader = isset($securityHeadersTest['Content-Security-Policy']) ? $securityHeadersTest['Content-Security-Policy'] : 'Eksik ⚠️';
    echo "<tr><td>Content Security Policy (CSP)</td><td><strong>$cspHeader</strong></td></tr>";

    // HTTP Security Flags Testi
    $cookieHeaders = isset($securityHeadersTest['Set-Cookie']) ? $securityHeadersTest['Set-Cookie'] : 'Eksik ⚠️';
    echo "<tr><td>HTTP Security Flags (Set-Cookie)</td><td><strong>$cookieHeaders</strong></td></tr>";
    
    // WAF Checker
    $wafTestPayloads = [
        "union+select+null--",
        "<script>alert('test')</script>",
        "' OR '1'='1",
        "<img src='x' onerror='alert(1)'>",
        "SELECT * FROM users WHERE 'a'='a"
    ];

    $wafDetected = false;
    foreach ($wafTestPayloads as $payload) {
        $encodedPayload = urlencode($payload);
        $testUrl = $url . "?test=" . $encodedPayload;

        $response = @file_get_contents($testUrl);

        if ($response !== false) {
            // WAF'ın müdahale edip etmediğini kontrol et
            if (strpos($response, '403 Forbidden') !== false || strpos($response, 'Error') !== false) {
                $wafDetected = true;
                break;
            }
        }
    }

    echo "<tr><td>WAF (Web Application Firewall) Kontrolü</td><td>" . ($wafDetected ? "<strong>Bulundu ✅</strong>" : "<strong>Bulunamadı ❌</strong>") . "</td></tr>";
    
    // Honeypot Detection
    $honeypotIndicators = [
        'honeypot',
        'dummy',
        'trap',
        'hidden'
    ];

    $honeypotFound = false;

    $htmlContent = @file_get_contents($url);

    if ($htmlContent !== false) {
        foreach ($honeypotIndicators as $indicator) {
            if (stripos($htmlContent, $indicator) !== false) {
                $honeypotFound = true;
                break;
            }
        }
    }

    echo "<tr><td>Honeypot Tespiti</td><td>" . ($honeypotFound ? "<strong>Bulundu ❌</strong>" : "<strong>Bulunamadı ✅</strong>") . "</td></tr>";

    echo '</table></div>';
}
?>

<?php include "../footer.php" ?>
